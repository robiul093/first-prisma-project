generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Post {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  published  Boolean  @default(false)
  authorName String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@map("posts")
}

// enum UserStatus {
//   ACTIVE
//   BLOCKED
// }

// enum USER_ROLE {
//   admin
//   marchant
// }

// enum RESTRICTED_USER_ROLE {
//   dispatch
//   account
//   warehouse
// }

// enum ParcelType {
//   REGULAR
//   EXPRESS
// }

// enum ParcelStatus {
//   PENDING
//   PROCESSING
//   COMPLETED
//   CANCELLED
// }

// enum DeliveryStatus {
//   PENDING
//   AWAITING_PICKUP
//   IN_TRANSIT
//   DELIVERED
//   NOT_DELIVERED
// }

// enum PaymentStatus {
//   PENDING
//   PAID
//   REFUNDED
// }

// model User {
//   id                      String           @id @default(uuid())
//   name                    String
//   businessName            String
//   address_Pickup_Location String
//   phone                   String
//   email                   String           @unique
//   role                    USER_ROLE
//   password                String
//   status                  UserStatus       @default(ACTIVE)
//   addresses               Address[]
//   customers               Customer[]
//   parcels                 AddParcel[]
//   restrictedUsers         RestrictedUser[]
//   isDeleted               Boolean          @default(false)
//   createdAt               DateTime         @default(now())
//   updatedAt               DateTime         @updatedAt
//   PaymentMethod           PaymentMethod[]
//   Ticket                  Ticket[]
//   Comment                 Comment[]
// }

// model PaymentMethod {
//   id         String      @id @default(uuid())
//   marchentId String
//   type       PaymentType // BANK | PAYPAL | CARD

//   // Common Fields
//   accountHolder String? // Used in BANK, CARD
//   accountNumber String? // Used in BANK
//   bsbNumber     String? // Used in BANK

//   // PayPal
//   email String? // Used in PAYPAL

//   // Card
//   cardNumber String? // Encrypted
//   expiryDate String? // MM/YY
//   cvc        String? // Encrypted

//   isDeleted Boolean  @default(false)
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   user User @relation(fields: [marchentId], references: [id])
// }

// enum PaymentType {
//   BANK
//   PAYPAL
//   CARD
// }

// model Address {
//   id              String   @id @default(uuid())
//   marchentId      String
//   addressName     String
//   streetName      String
//   cityOrSuburb    String
//   postalCode      String
//   country         String
//   phoneNumber     String
//   additionalNotes String?
//   createdAt       DateTime @default(now())
//   updatedAt       DateTime @updatedAt
//   isDeleted       Boolean  @default(false)

//   user      User        @relation(fields: [marchentId], references: [id])
//   AddParcel AddParcel[]
// }

// model Customer {
//   id              String   @id @default(uuid())
//   marchentId      String
//   Name            String
//   Email           String
//   Phone           String
//   ShippingAddress String
//   BillingAddress  String
//   postalCode      String
//   createdAt       DateTime @default(now())
//   updatedAt       DateTime @updatedAt
//   isDeleted       Boolean  @default(false)

//   user      User        @relation(fields: [marchentId], references: [id])
//   AddParcel AddParcel[]
// }

// model AddParcel {
//   id             String         @id @default(uuid())
//   marchentId     String
//   type           ParcelType
//   name           String
//   weight         String
//   length         String
//   width          String
//   height         String
//   description    String
//   customerId     String
//   addressId      String
//   invoice        String?
//   notes          String?
//   pickupDate     DateTime?
//   trackingId     String?        @unique
//   status         ParcelStatus   @default(PENDING)
//   deliveryStatus DeliveryStatus @default(PENDING)
//   amount         Float?
//   paymentStatus  PaymentStatus  @default(PENDING)
//   createdAt      DateTime       @default(now())
//   updatedAt      DateTime       @updatedAt
//   isDeleted      Boolean        @default(false)
//   address        Address        @relation(fields: [addressId], references: [id])
//   user           User           @relation(fields: [marchentId], references: [id])
//   customar       Customer       @relation(fields: [customerId], references: [id])
//   Notification   Notification[]
// }

// model Notification {
//   id        String    @id @default(uuid())
//   title     String
//   isRead    Boolean   @default(false)
//   parcelId  String
//   createdAt DateTime  @default(now())
//   parcel    AddParcel @relation(fields: [parcelId], references: [id])
// }

// model RestrictedUser {
//   id                 String               @id @default(uuid())
//   marchentId         String
//   email              String
//   role               RESTRICTED_USER_ROLE
//   placeOrders        Boolean
//   accessSavedAddress Boolean
//   useDefaultAddress  Boolean
//   createdAt          DateTime             @default(now())
//   updatedAt          DateTime             @updatedAt
//   isDeleted          Boolean              @default(false)

//   user User @relation(fields: [marchentId], references: [id])
// }

// enum SupportStatus {
//   OPEN
//   PENDING
//   RESOLVED
// }

// enum SupportPriority {
//   LOW
//   MEDIUM
//   HIGH
//   URGENT
// }

// enum SupportCategory {
//   DELIVERY_ISSUES
//   PAYMENT_ISSUES
//   GENERAL_INQUIRY
//   TECHNICAL_SUPPORT
//   BILLING_CHARGES
//   REFUND_REQUEST
//   PRODUCT_INQUIRY
//   ACCOUNT_ISSUES
//   OTHER
// }

// model Ticket {
//   id                   String          @id @default(cuid())
//   ticketId             String          @unique // Display ID like TKT001
//   title                String
//   description          String
//   category             SupportCategory
//   status               SupportStatus   @default(OPEN)
//   priority             SupportPriority @default(MEDIUM)
//   attachementLiveLinks String[]        @default([]) // Default to an empty array if not provided
//   marchentId           String
//   user                 User            @relation(fields: [marchentId], references: [id])
//   createdAt            DateTime        @default(now())
//   updatedAt            DateTime        @updatedAt
//   resolvedAt           DateTime?
//   closedAt             DateTime?

//   // Related records
//   comments Comment[]

//   @@map("tickets")
// }

// model Comment {
//   id       String @id @default(uuid())
//   content  String
//   // Relations
//   ticketId String
//   ticket   Ticket @relation(fields: [ticketId], references: [id], onDelete: Cascade)

//   authorId String
//   author   User   @relation(fields: [authorId], references: [id])

//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   @@map("comments")
// }
